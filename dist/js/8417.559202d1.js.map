{"version":3,"file":"js/8417.559202d1.js","mappings":"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","sources":["webpack://tims-dexon/./node_modules/devextreme-vue/file-uploader.js","webpack://tims-dexon/./node_modules/devextreme/esm/ui/track_bar.js","webpack://tims-dexon/./node_modules/devextreme/esm/ui/progress_bar.js","webpack://tims-dexon/./node_modules/devextreme/esm/ui/file_uploader.js"],"sourcesContent":["/*!\n * devextreme-vue\n * Version: 21.2.7\n * Build date: Mon Apr 11 2022\n *\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-vue\n */\n\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DxFileUploader = void 0;\nvar file_uploader_1 = __importDefault(require(\"devextreme/ui/file_uploader\"));\nvar index_1 = require(\"./core/index\");\nvar DxFileUploader = index_1.createComponent({\n    props: {\n        abortUpload: Function,\n        accept: String,\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        allowCanceling: Boolean,\n        allowedFileExtensions: Array,\n        chunkSize: Number,\n        dialogTrigger: {},\n        disabled: Boolean,\n        dropZone: {},\n        elementAttr: Object,\n        focusStateEnabled: Boolean,\n        height: [Function, Number, String],\n        hint: String,\n        hoverStateEnabled: Boolean,\n        inputAttr: {},\n        invalidFileExtensionMessage: String,\n        invalidMaxFileSizeMessage: String,\n        invalidMinFileSizeMessage: String,\n        isValid: Boolean,\n        labelText: String,\n        maxFileSize: Number,\n        minFileSize: Number,\n        multiple: Boolean,\n        name: String,\n        onBeforeSend: Function,\n        onContentReady: Function,\n        onDisposing: Function,\n        onDropZoneEnter: Function,\n        onDropZoneLeave: Function,\n        onFilesUploaded: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        onProgress: Function,\n        onUploadAborted: Function,\n        onUploaded: Function,\n        onUploadError: Function,\n        onUploadStarted: Function,\n        onValueChanged: Function,\n        progress: Number,\n        readOnly: Boolean,\n        readyToUploadMessage: String,\n        rtlEnabled: Boolean,\n        selectButtonText: String,\n        showFileList: Boolean,\n        tabIndex: Number,\n        uploadAbortedMessage: String,\n        uploadButtonText: String,\n        uploadChunk: Function,\n        uploadCustomData: {},\n        uploadedMessage: String,\n        uploadFailedMessage: String,\n        uploadFile: Function,\n        uploadHeaders: {},\n        uploadMethod: String,\n        uploadMode: String,\n        uploadUrl: String,\n        validationError: {},\n        validationErrors: Array,\n        validationStatus: String,\n        value: Array,\n        visible: Boolean,\n        width: [Function, Number, String]\n    },\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:abortUpload\": null,\n        \"update:accept\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:allowCanceling\": null,\n        \"update:allowedFileExtensions\": null,\n        \"update:chunkSize\": null,\n        \"update:dialogTrigger\": null,\n        \"update:disabled\": null,\n        \"update:dropZone\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:height\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:inputAttr\": null,\n        \"update:invalidFileExtensionMessage\": null,\n        \"update:invalidMaxFileSizeMessage\": null,\n        \"update:invalidMinFileSizeMessage\": null,\n        \"update:isValid\": null,\n        \"update:labelText\": null,\n        \"update:maxFileSize\": null,\n        \"update:minFileSize\": null,\n        \"update:multiple\": null,\n        \"update:name\": null,\n        \"update:onBeforeSend\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onDropZoneEnter\": null,\n        \"update:onDropZoneLeave\": null,\n        \"update:onFilesUploaded\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onProgress\": null,\n        \"update:onUploadAborted\": null,\n        \"update:onUploaded\": null,\n        \"update:onUploadError\": null,\n        \"update:onUploadStarted\": null,\n        \"update:onValueChanged\": null,\n        \"update:progress\": null,\n        \"update:readOnly\": null,\n        \"update:readyToUploadMessage\": null,\n        \"update:rtlEnabled\": null,\n        \"update:selectButtonText\": null,\n        \"update:showFileList\": null,\n        \"update:tabIndex\": null,\n        \"update:uploadAbortedMessage\": null,\n        \"update:uploadButtonText\": null,\n        \"update:uploadChunk\": null,\n        \"update:uploadCustomData\": null,\n        \"update:uploadedMessage\": null,\n        \"update:uploadFailedMessage\": null,\n        \"update:uploadFile\": null,\n        \"update:uploadHeaders\": null,\n        \"update:uploadMethod\": null,\n        \"update:uploadMode\": null,\n        \"update:uploadUrl\": null,\n        \"update:validationError\": null,\n        \"update:validationErrors\": null,\n        \"update:validationStatus\": null,\n        \"update:value\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    computed: {\n        instance: function () {\n            return this.$_instance;\n        }\n    },\n    beforeCreate: function () {\n        this.$_WidgetClass = file_uploader_1.default;\n        this.$_hasAsyncTemplate = true;\n    }\n});\nexports.DxFileUploader = DxFileUploader;\nexports.default = DxFileUploader;\n","/**\r\n * DevExtreme (esm/ui/track_bar.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport Editor from \"./editor/editor\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    hasWindow\r\n} from \"../core/utils/window\";\r\nimport fx from \"../animation/fx\";\r\nvar TRACKBAR_CLASS = \"dx-trackbar\";\r\nvar TRACKBAR_CONTAINER_CLASS = \"dx-trackbar-container\";\r\nvar TRACKBAR_RANGE_CLASS = \"dx-trackbar-range\";\r\nvar TRACKBAR_WRAPPER_CLASS = \"dx-trackbar-wrapper\";\r\nvar TrackBar = Editor.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            min: 0,\r\n            max: 100,\r\n            value: 0\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(TRACKBAR_CLASS);\r\n        this._renderWrapper();\r\n        this._renderContainer();\r\n        this._renderRange();\r\n        this._renderValue();\r\n        this._setRangeStyles();\r\n        this.callBase()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._setRangeStyles(this._rangeStylesConfig())\r\n    },\r\n    _renderWrapper: function() {\r\n        this._$wrapper = $(\"<div>\").addClass(TRACKBAR_WRAPPER_CLASS).appendTo(this.$element())\r\n    },\r\n    _renderContainer: function() {\r\n        this._$bar = $(\"<div>\").addClass(TRACKBAR_CONTAINER_CLASS).appendTo(this._$wrapper)\r\n    },\r\n    _renderRange: function() {\r\n        this._$range = $(\"<div>\").addClass(TRACKBAR_RANGE_CLASS).appendTo(this._$bar)\r\n    },\r\n    _renderValue: function() {\r\n        var val = this.option(\"value\");\r\n        var min = this.option(\"min\");\r\n        var max = this.option(\"max\");\r\n        if (min > max) {\r\n            return\r\n        }\r\n        if (val < min) {\r\n            this.option(\"value\", min);\r\n            this._currentRatio = 0;\r\n            return\r\n        }\r\n        if (val > max) {\r\n            this.option(\"value\", max);\r\n            this._currentRatio = 1;\r\n            return\r\n        }\r\n        var ratio = min === max ? 0 : (val - min) / (max - min);\r\n        !this._needPreventAnimation && this._setRangeStyles({\r\n            width: 100 * ratio + \"%\"\r\n        });\r\n        this.setAria({\r\n            valuemin: this.option(\"min\"),\r\n            valuemax: max,\r\n            valuenow: val\r\n        });\r\n        this._currentRatio = ratio\r\n    },\r\n    _rangeStylesConfig: function() {\r\n        return {\r\n            width: 100 * this._currentRatio + \"%\"\r\n        }\r\n    },\r\n    _setRangeStyles: function(options) {\r\n        fx.stop(this._$range);\r\n        if (!options) {\r\n            this._$range.css({\r\n                width: 0\r\n            });\r\n            return\r\n        }\r\n        if (this._needPreventAnimation || !hasWindow()) {\r\n            return\r\n        }\r\n        fx.animate(this._$range, {\r\n            type: \"custom\",\r\n            duration: 100,\r\n            to: options\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._renderValue();\r\n                this.callBase(args);\r\n                break;\r\n            case \"max\":\r\n            case \"min\":\r\n                this._renderValue();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        fx.stop(this._$range);\r\n        this.callBase()\r\n    }\r\n});\r\nregisterComponent(\"dxTrackBar\", TrackBar);\r\nexport default TrackBar;\r\n","/**\r\n * DevExtreme (esm/ui/progress_bar.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport TrackBar from \"./track_bar\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    isFunction\r\n} from \"../core/utils/type\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nvar PROGRESSBAR_CLASS = \"dx-progressbar\";\r\nvar PROGRESSBAR_CONTAINER_CLASS = \"dx-progressbar-container\";\r\nvar PROGRESSBAR_RANGE_CONTAINER_CLASS = \"dx-progressbar-range-container\";\r\nvar PROGRESSBAR_RANGE_CLASS = \"dx-progressbar-range\";\r\nvar PROGRESSBAR_WRAPPER_CLASS = \"dx-progressbar-wrapper\";\r\nvar PROGRESSBAR_STATUS_CLASS = \"dx-progressbar-status\";\r\nvar PROGRESSBAR_INDETERMINATE_SEGMENT_CONTAINER = \"dx-progressbar-animating-container\";\r\nvar PROGRESSBAR_INDETERMINATE_SEGMENT = \"dx-progressbar-animating-segment\";\r\nvar ProgressBar = TrackBar.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: 0,\r\n            statusFormat: function(ratio) {\r\n                return \"Progress: \" + Math.round(100 * ratio) + \"%\"\r\n            },\r\n            showStatus: true,\r\n            onComplete: null,\r\n            activeStateEnabled: false,\r\n            statusPosition: \"bottom left\",\r\n            _animatingSegmentCount: 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function(_device) {\r\n                return \"android\" === _device.platform\r\n            },\r\n            options: {\r\n                _animatingSegmentCount: 2\r\n            }\r\n        }])\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderStatus();\r\n        this._createCompleteAction();\r\n        this.callBase();\r\n        this.$element().addClass(PROGRESSBAR_CLASS);\r\n        this._$wrapper.addClass(PROGRESSBAR_WRAPPER_CLASS);\r\n        this._$bar.addClass(PROGRESSBAR_CONTAINER_CLASS);\r\n        this.setAria(\"role\", \"progressbar\");\r\n        $(\"<div>\").addClass(PROGRESSBAR_RANGE_CONTAINER_CLASS).appendTo(this._$wrapper).append(this._$bar);\r\n        this._$range.addClass(PROGRESSBAR_RANGE_CLASS);\r\n        this._toggleStatus(this.option(\"showStatus\"))\r\n    },\r\n    _useTemplates: function() {\r\n        return false\r\n    },\r\n    _createCompleteAction: function() {\r\n        this._completeAction = this._createActionByOption(\"onComplete\")\r\n    },\r\n    _renderStatus: function() {\r\n        this._$status = $(\"<div>\").addClass(PROGRESSBAR_STATUS_CLASS)\r\n    },\r\n    _renderIndeterminateState: function() {\r\n        this._$segmentContainer = $(\"<div>\").addClass(PROGRESSBAR_INDETERMINATE_SEGMENT_CONTAINER);\r\n        var segments = this.option(\"_animatingSegmentCount\");\r\n        for (var i = 0; i < segments; i++) {\r\n            $(\"<div>\").addClass(PROGRESSBAR_INDETERMINATE_SEGMENT).addClass(PROGRESSBAR_INDETERMINATE_SEGMENT + \"-\" + (i + 1)).appendTo(this._$segmentContainer)\r\n        }\r\n        this._$segmentContainer.appendTo(this._$wrapper)\r\n    },\r\n    _toggleStatus: function(value) {\r\n        var splitPosition = this.option(\"statusPosition\").split(\" \");\r\n        if (value) {\r\n            if (\"top\" === splitPosition[0] || \"left\" === splitPosition[0]) {\r\n                this._$status.prependTo(this._$wrapper)\r\n            } else {\r\n                this._$status.appendTo(this._$wrapper)\r\n            }\r\n        } else {\r\n            this._$status.detach()\r\n        }\r\n        this._togglePositionClass()\r\n    },\r\n    _togglePositionClass: function() {\r\n        var position = this.option(\"statusPosition\");\r\n        var splitPosition = position.split(\" \");\r\n        this._$wrapper.removeClass(\"dx-position-top-left dx-position-top-right dx-position-bottom-left dx-position-bottom-right dx-position-left dx-position-right\");\r\n        var positionClass = \"dx-position-\" + splitPosition[0];\r\n        if (splitPosition[1]) {\r\n            positionClass += \"-\" + splitPosition[1]\r\n        }\r\n        this._$wrapper.addClass(positionClass)\r\n    },\r\n    _toggleIndeterminateState: function(value) {\r\n        if (value) {\r\n            this._renderIndeterminateState();\r\n            this._$bar.toggle(false)\r\n        } else {\r\n            this._$bar.toggle(true);\r\n            this._$segmentContainer.remove();\r\n            delete this._$segmentContainer\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        var val = this.option(\"value\");\r\n        var max = this.option(\"max\");\r\n        if (!val && 0 !== val) {\r\n            this._toggleIndeterminateState(true);\r\n            return\r\n        }\r\n        if (this._$segmentContainer) {\r\n            this._toggleIndeterminateState(false)\r\n        }\r\n        if (val === max) {\r\n            this._completeAction()\r\n        }\r\n        this.callBase();\r\n        this._setStatus()\r\n    },\r\n    _setStatus: function() {\r\n        var format = this.option(\"statusFormat\");\r\n        if (isFunction(format)) {\r\n            format = format.bind(this)\r\n        } else {\r\n            format = function(value) {\r\n                return value\r\n            }\r\n        }\r\n        var statusText = format(this._currentRatio, this.option(\"value\"));\r\n        this._$status.text(statusText)\r\n    },\r\n    _dispose: function() {\r\n        this._$status.remove();\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"statusFormat\":\r\n                this._setStatus();\r\n                break;\r\n            case \"showStatus\":\r\n                this._toggleStatus(args.value);\r\n                break;\r\n            case \"statusPosition\":\r\n                this._toggleStatus(this.option(\"showStatus\"));\r\n                break;\r\n            case \"onComplete\":\r\n                this._createCompleteAction();\r\n                break;\r\n            case \"_animatingSegmentCount\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxProgressBar\", ProgressBar);\r\nexport default ProgressBar;\r\n","/**\r\n * DevExtreme (esm/ui/file_uploader.js)\r\n * Version: 21.2.7\r\n * Build date: Mon Apr 11 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOffset,\r\n    getWidth\r\n} from \"../core/utils/size\";\r\nimport $ from \"../core/renderer\";\r\nimport Guid from \"../core/guid\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport Callbacks from \"../core/utils/callbacks\";\r\nimport {\r\n    isDefined,\r\n    isFunction,\r\n    isNumeric\r\n} from \"../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    inArray\r\n} from \"../core/utils/array\";\r\nimport {\r\n    Deferred,\r\n    fromPromise\r\n} from \"../core/utils/deferred\";\r\nimport ajax from \"../core/utils/ajax\";\r\nimport Editor from \"./editor/editor\";\r\nimport Button from \"./button\";\r\nimport ProgressBar from \"./progress_bar\";\r\nimport devices from \"../core/devices\";\r\nimport {\r\n    addNamespace,\r\n    isTouchEvent\r\n} from \"../events/utils/index\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../events/click\";\r\nimport messageLocalization from \"../localization/message\";\r\nimport {\r\n    isMaterial\r\n} from \"./themes\";\r\nimport domAdapter from \"../core/dom_adapter\";\r\nvar window = getWindow();\r\nvar FILEUPLOADER_CLASS = \"dx-fileuploader\";\r\nvar FILEUPLOADER_EMPTY_CLASS = \"dx-fileuploader-empty\";\r\nvar FILEUPLOADER_SHOW_FILE_LIST_CLASS = \"dx-fileuploader-show-file-list\";\r\nvar FILEUPLOADER_DRAGOVER_CLASS = \"dx-fileuploader-dragover\";\r\nvar FILEUPLOADER_WRAPPER_CLASS = \"dx-fileuploader-wrapper\";\r\nvar FILEUPLOADER_CONTAINER_CLASS = \"dx-fileuploader-container\";\r\nvar FILEUPLOADER_CONTENT_CLASS = \"dx-fileuploader-content\";\r\nvar FILEUPLOADER_INPUT_WRAPPER_CLASS = \"dx-fileuploader-input-wrapper\";\r\nvar FILEUPLOADER_INPUT_CONTAINER_CLASS = \"dx-fileuploader-input-container\";\r\nvar FILEUPLOADER_INPUT_LABEL_CLASS = \"dx-fileuploader-input-label\";\r\nvar FILEUPLOADER_INPUT_CLASS = \"dx-fileuploader-input\";\r\nvar FILEUPLOADER_FILES_CONTAINER_CLASS = \"dx-fileuploader-files-container\";\r\nvar FILEUPLOADER_FILE_CONTAINER_CLASS = \"dx-fileuploader-file-container\";\r\nvar FILEUPLOADER_FILE_INFO_CLASS = \"dx-fileuploader-file-info\";\r\nvar FILEUPLOADER_FILE_STATUS_MESSAGE_CLASS = \"dx-fileuploader-file-status-message\";\r\nvar FILEUPLOADER_FILE_CLASS = \"dx-fileuploader-file\";\r\nvar FILEUPLOADER_FILE_NAME_CLASS = \"dx-fileuploader-file-name\";\r\nvar FILEUPLOADER_FILE_SIZE_CLASS = \"dx-fileuploader-file-size\";\r\nvar FILEUPLOADER_BUTTON_CLASS = \"dx-fileuploader-button\";\r\nvar FILEUPLOADER_BUTTON_CONTAINER_CLASS = \"dx-fileuploader-button-container\";\r\nvar FILEUPLOADER_CANCEL_BUTTON_CLASS = \"dx-fileuploader-cancel-button\";\r\nvar FILEUPLOADER_UPLOAD_BUTTON_CLASS = \"dx-fileuploader-upload-button\";\r\nvar FILEUPLOADER_INVALID_CLASS = \"dx-fileuploader-invalid\";\r\nvar FILEUPLOADER_AFTER_LOAD_DELAY = 400;\r\nvar FILEUPLOADER_CHUNK_META_DATA_NAME = \"chunkMetadata\";\r\nvar renderFileUploaderInput = () => $(\"<input>\").attr(\"type\", \"file\");\r\nvar isFormDataSupported = () => !!window.FormData;\r\nclass FileUploader extends Editor {\r\n    _supportedKeys() {\r\n        var click = e => {\r\n            e.preventDefault();\r\n            var $selectButton = this._selectButton.$element();\r\n            eventsEngine.trigger($selectButton, clickEventName)\r\n        };\r\n        return extend(super._supportedKeys(), {\r\n            space: click,\r\n            enter: click\r\n        })\r\n    }\r\n    _setOptionsByReference() {\r\n        super._setOptionsByReference();\r\n        extend(this._optionsByReference, {\r\n            value: true\r\n        })\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            chunkSize: 0,\r\n            value: [],\r\n            selectButtonText: messageLocalization.format(\"dxFileUploader-selectFile\"),\r\n            uploadButtonText: messageLocalization.format(\"dxFileUploader-upload\"),\r\n            labelText: messageLocalization.format(\"dxFileUploader-dropFile\"),\r\n            name: \"files[]\",\r\n            multiple: false,\r\n            accept: \"\",\r\n            uploadUrl: \"/\",\r\n            allowCanceling: true,\r\n            showFileList: true,\r\n            progress: 0,\r\n            dialogTrigger: void 0,\r\n            dropZone: void 0,\r\n            readyToUploadMessage: messageLocalization.format(\"dxFileUploader-readyToUpload\"),\r\n            uploadedMessage: messageLocalization.format(\"dxFileUploader-uploaded\"),\r\n            uploadFailedMessage: messageLocalization.format(\"dxFileUploader-uploadFailedMessage\"),\r\n            uploadAbortedMessage: messageLocalization.format(\"dxFileUploader-uploadAbortedMessage\"),\r\n            uploadMode: \"instantly\",\r\n            uploadMethod: \"POST\",\r\n            uploadHeaders: {},\r\n            uploadCustomData: {},\r\n            onBeforeSend: null,\r\n            onUploadStarted: null,\r\n            onUploaded: null,\r\n            onFilesUploaded: null,\r\n            onProgress: null,\r\n            onUploadError: null,\r\n            onUploadAborted: null,\r\n            onDropZoneEnter: null,\r\n            onDropZoneLeave: null,\r\n            allowedFileExtensions: [],\r\n            maxFileSize: 0,\r\n            minFileSize: 0,\r\n            inputAttr: {},\r\n            invalidFileExtensionMessage: messageLocalization.format(\"dxFileUploader-invalidFileExtension\"),\r\n            invalidMaxFileSizeMessage: messageLocalization.format(\"dxFileUploader-invalidMaxFileSize\"),\r\n            invalidMinFileSizeMessage: messageLocalization.format(\"dxFileUploader-invalidMinFileSize\"),\r\n            extendSelection: true,\r\n            validationMessageMode: \"always\",\r\n            uploadFile: null,\r\n            uploadChunk: null,\r\n            abortUpload: null,\r\n            validationMessageOffset: {\r\n                h: 0,\r\n                v: 0\r\n            },\r\n            hoverStateEnabled: true,\r\n            useNativeInputClick: false,\r\n            useDragOver: true,\r\n            nativeDropSupported: true,\r\n            _uploadButtonType: \"normal\"\r\n        })\r\n    }\r\n    _defaultOptionsRules() {\r\n        return super._defaultOptionsRules().concat([{\r\n            device: () => \"desktop\" === devices.real().deviceType && !devices.isSimulator(),\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: [{\r\n                platform: \"android\"\r\n            }],\r\n            options: {\r\n                validationMessageOffset: {\r\n                    v: 0\r\n                }\r\n            }\r\n        }, {\r\n            device: () => \"desktop\" !== devices.real().deviceType,\r\n            options: {\r\n                useDragOver: false\r\n            }\r\n        }, {\r\n            device: () => !isFormDataSupported(),\r\n            options: {\r\n                uploadMode: \"useForm\"\r\n            }\r\n        }, {\r\n            device: () => \"desktop\" !== devices.real().deviceType,\r\n            options: {\r\n                nativeDropSupported: false\r\n            }\r\n        }, {\r\n            device: () => isMaterial(),\r\n            options: {\r\n                _uploadButtonType: \"default\"\r\n            }\r\n        }])\r\n    }\r\n    _initOptions(options) {\r\n        var isLabelTextDefined = \"labelText\" in options;\r\n        super._initOptions(options);\r\n        if (!isLabelTextDefined && !this._shouldDragOverBeRendered()) {\r\n            this.option(\"labelText\", \"\")\r\n        }\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this._initFileInput();\r\n        this._initLabel();\r\n        this._setUploadStrategy();\r\n        this._createFiles();\r\n        this._createBeforeSendAction();\r\n        this._createUploadStartedAction();\r\n        this._createUploadedAction();\r\n        this._createFilesUploadedAction();\r\n        this._createProgressAction();\r\n        this._createUploadErrorAction();\r\n        this._createUploadAbortedAction();\r\n        this._createDropZoneEnterAction();\r\n        this._createDropZoneLeaveAction()\r\n    }\r\n    _setUploadStrategy() {\r\n        var strategy = null;\r\n        if (this.option(\"chunkSize\") > 0) {\r\n            var uploadChunk = this.option(\"uploadChunk\");\r\n            strategy = uploadChunk && isFunction(uploadChunk) ? new CustomChunksFileUploadStrategy(this) : new DefaultChunksFileUploadStrategy(this)\r\n        } else {\r\n            var uploadFile = this.option(\"uploadFile\");\r\n            strategy = uploadFile && isFunction(uploadFile) ? new CustomWholeFileUploadStrategy(this) : new DefaultWholeFileUploadStrategy(this)\r\n        }\r\n        this._uploadStrategy = strategy\r\n    }\r\n    _initFileInput() {\r\n        this._isCustomClickEvent = false;\r\n        if (!this._$fileInput) {\r\n            this._$fileInput = renderFileUploaderInput();\r\n            eventsEngine.on(this._$fileInput, \"change\", this._inputChangeHandler.bind(this));\r\n            eventsEngine.on(this._$fileInput, \"click\", e => {\r\n                e.stopPropagation();\r\n                this._resetInputValue();\r\n                return this.option(\"useNativeInputClick\") || this._isCustomClickEvent\r\n            })\r\n        }\r\n        this._$fileInput.prop({\r\n            multiple: this.option(\"multiple\"),\r\n            accept: this.option(\"accept\"),\r\n            tabIndex: -1\r\n        })\r\n    }\r\n    _inputChangeHandler() {\r\n        if (this._doPreventInputChange) {\r\n            return\r\n        }\r\n        var fileName = this._$fileInput.val().replace(/^.*\\\\/, \"\");\r\n        var files = this._$fileInput.prop(\"files\");\r\n        if (files && !files.length && \"useForm\" !== this.option(\"uploadMode\")) {\r\n            return\r\n        }\r\n        var value = files ? this._getFiles(files) : [{\r\n            name: fileName\r\n        }];\r\n        this._changeValue(value);\r\n        if (\"instantly\" === this.option(\"uploadMode\")) {\r\n            this._uploadFiles()\r\n        }\r\n    }\r\n    _shouldFileListBeExtended() {\r\n        return \"useForm\" !== this.option(\"uploadMode\") && this.option(\"extendSelection\") && this.option(\"multiple\")\r\n    }\r\n    _changeValue(value) {\r\n        var files = this._shouldFileListBeExtended() ? this.option(\"value\").slice() : [];\r\n        this.option(\"value\", files.concat(value))\r\n    }\r\n    _getFiles(fileList) {\r\n        var values = [];\r\n        each(fileList, (_, value) => values.push(value));\r\n        return values\r\n    }\r\n    _getFile(fileData) {\r\n        var targetFileValue = isNumeric(fileData) ? this.option(\"value\")[fileData] : fileData;\r\n        return this._files.filter(file => file.value === targetFileValue)[0]\r\n    }\r\n    _initLabel() {\r\n        if (!this._$inputLabel) {\r\n            this._$inputLabel = $(\"<div>\")\r\n        }\r\n        this._updateInputLabelText()\r\n    }\r\n    _updateInputLabelText() {\r\n        var correctedValue = this._isInteractionDisabled() ? \"\" : this.option(\"labelText\");\r\n        this._$inputLabel.text(correctedValue)\r\n    }\r\n    _focusTarget() {\r\n        return this.$element().find(\".\" + FILEUPLOADER_BUTTON_CLASS)\r\n    }\r\n    _getSubmitElement() {\r\n        return this._$fileInput\r\n    }\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        this.$element().addClass(FILEUPLOADER_CLASS);\r\n        this._renderWrapper();\r\n        this._renderInputWrapper();\r\n        this._renderSelectButton();\r\n        this._renderInputContainer();\r\n        this._renderUploadButton();\r\n        this._preventRecreatingFiles = true;\r\n        this._activeDropZone = null\r\n    }\r\n    _render() {\r\n        this._preventRecreatingFiles = false;\r\n        this._attachDragEventHandlers(this._$inputWrapper);\r\n        this._attachDragEventHandlers(this.option(\"dropZone\"));\r\n        this._renderFiles();\r\n        super._render()\r\n    }\r\n    _createFileProgressBar(file) {\r\n        file.progressBar = this._createProgressBar(file.value.size);\r\n        file.progressBar.$element().appendTo(file.$file);\r\n        this._initStatusMessage(file);\r\n        this._ensureCancelButtonInitialized(file)\r\n    }\r\n    _setStatusMessage(file, message) {\r\n        setTimeout(() => {\r\n            if (this.option(\"showFileList\")) {\r\n                if (file.$statusMessage) {\r\n                    file.$statusMessage.text(message);\r\n                    file.$statusMessage.css(\"display\", \"\");\r\n                    file.progressBar.$element().remove()\r\n                }\r\n            }\r\n        }, FILEUPLOADER_AFTER_LOAD_DELAY)\r\n    }\r\n    _getUploadAbortedStatusMessage() {\r\n        return \"instantly\" === this.option(\"uploadMode\") ? this.option(\"uploadAbortedMessage\") : this.option(\"readyToUploadMessage\")\r\n    }\r\n    _createFiles() {\r\n        var value = this.option(\"value\");\r\n        if (this._files && (0 === value.length || !this._shouldFileListBeExtended())) {\r\n            this._preventFilesUploading(this._files);\r\n            this._files = null\r\n        }\r\n        if (!this._files) {\r\n            this._files = []\r\n        }\r\n        each(value.slice(this._files.length), (_, value) => {\r\n            var file = this._createFile(value);\r\n            this._validateFile(file);\r\n            this._files.push(file)\r\n        })\r\n    }\r\n    _preventFilesUploading(files) {\r\n        files.forEach(file => this._uploadStrategy.abortUpload(file))\r\n    }\r\n    _validateFile(file) {\r\n        file.isValidFileExtension = this._validateFileExtension(file);\r\n        file.isValidMinSize = this._validateMinFileSize(file);\r\n        file.isValidMaxSize = this._validateMaxFileSize(file)\r\n    }\r\n    _validateFileExtension(file) {\r\n        var allowedExtensions = this.option(\"allowedFileExtensions\");\r\n        var accept = this.option(\"accept\");\r\n        var allowedTypes = this._getAllowedFileTypes(accept);\r\n        var fileExtension = file.value.name.substring(file.value.name.lastIndexOf(\".\")).toLowerCase();\r\n        if (0 !== accept.length && !this._isFileTypeAllowed(file.value, allowedTypes)) {\r\n            return false\r\n        }\r\n        if (0 === allowedExtensions.length) {\r\n            return true\r\n        }\r\n        for (var i = 0; i < allowedExtensions.length; i++) {\r\n            if (fileExtension === allowedExtensions[i].toLowerCase()) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    _validateMaxFileSize(file) {\r\n        var fileSize = file.value.size;\r\n        var maxFileSize = this.option(\"maxFileSize\");\r\n        return maxFileSize > 0 ? fileSize <= maxFileSize : true\r\n    }\r\n    _validateMinFileSize(file) {\r\n        var fileSize = file.value.size;\r\n        var minFileSize = this.option(\"minFileSize\");\r\n        return minFileSize > 0 ? fileSize >= minFileSize : true\r\n    }\r\n    _createBeforeSendAction() {\r\n        this._beforeSendAction = this._createActionByOption(\"onBeforeSend\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        })\r\n    }\r\n    _createUploadStartedAction() {\r\n        this._uploadStartedAction = this._createActionByOption(\"onUploadStarted\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        })\r\n    }\r\n    _createUploadedAction() {\r\n        this._uploadedAction = this._createActionByOption(\"onUploaded\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        })\r\n    }\r\n    _createFilesUploadedAction() {\r\n        this._filesUploadedAction = this._createActionByOption(\"onFilesUploaded\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        })\r\n    }\r\n    _createProgressAction() {\r\n        this._progressAction = this._createActionByOption(\"onProgress\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        })\r\n    }\r\n    _createUploadAbortedAction() {\r\n        this._uploadAbortedAction = this._createActionByOption(\"onUploadAborted\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        })\r\n    }\r\n    _createUploadErrorAction() {\r\n        this._uploadErrorAction = this._createActionByOption(\"onUploadError\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        })\r\n    }\r\n    _createDropZoneEnterAction() {\r\n        this._dropZoneEnterAction = this._createActionByOption(\"onDropZoneEnter\")\r\n    }\r\n    _createDropZoneLeaveAction() {\r\n        this._dropZoneLeaveAction = this._createActionByOption(\"onDropZoneLeave\")\r\n    }\r\n    _createFile(value) {\r\n        return {\r\n            value: value,\r\n            loadedSize: 0,\r\n            onProgress: Callbacks(),\r\n            onAbort: Callbacks(),\r\n            onLoad: Callbacks(),\r\n            onError: Callbacks(),\r\n            onLoadStart: Callbacks(),\r\n            isValidFileExtension: true,\r\n            isValidMaxSize: true,\r\n            isValidMinSize: true,\r\n            isValid() {\r\n                return this.isValidFileExtension && this.isValidMaxSize && this.isValidMinSize\r\n            },\r\n            isInitialized: false\r\n        }\r\n    }\r\n    _resetFileState(file) {\r\n        file.isAborted = false;\r\n        file.uploadStarted = false;\r\n        file.isStartLoad = false;\r\n        file.loadedSize = 0;\r\n        file.chunksData = void 0;\r\n        file.request = void 0\r\n    }\r\n    _renderFiles() {\r\n        var _this$_validationMess;\r\n        var value = this.option(\"value\");\r\n        if (!this._$filesContainer) {\r\n            this._$filesContainer = $(\"<div>\").addClass(FILEUPLOADER_FILES_CONTAINER_CLASS).appendTo(this._$content)\r\n        } else if (!this._shouldFileListBeExtended() || 0 === value.length) {\r\n            this._$filesContainer.empty()\r\n        }\r\n        var showFileList = this.option(\"showFileList\");\r\n        if (showFileList) {\r\n            each(this._files, (_, file) => {\r\n                if (!file.$file) {\r\n                    this._renderFile(file)\r\n                }\r\n            })\r\n        }\r\n        this.$element().toggleClass(FILEUPLOADER_SHOW_FILE_LIST_CLASS, showFileList);\r\n        this._toggleFileUploaderEmptyClassName();\r\n        this._updateFileNameMaxWidth();\r\n        null === (_this$_validationMess = this._validationMessage) || void 0 === _this$_validationMess ? void 0 : _this$_validationMess.repaint()\r\n    }\r\n    _renderFile(file) {\r\n        var value = file.value;\r\n        var $fileContainer = $(\"<div>\").addClass(FILEUPLOADER_FILE_CONTAINER_CLASS).appendTo(this._$filesContainer);\r\n        this._renderFileButtons(file, $fileContainer);\r\n        file.$file = $(\"<div>\").addClass(FILEUPLOADER_FILE_CLASS).appendTo($fileContainer);\r\n        var $fileInfo = $(\"<div>\").addClass(FILEUPLOADER_FILE_INFO_CLASS).appendTo(file.$file);\r\n        file.$statusMessage = $(\"<div>\").addClass(FILEUPLOADER_FILE_STATUS_MESSAGE_CLASS).appendTo(file.$file);\r\n        $(\"<div>\").addClass(FILEUPLOADER_FILE_NAME_CLASS).text(value.name).appendTo($fileInfo);\r\n        if (isDefined(value.size)) {\r\n            $(\"<div>\").addClass(FILEUPLOADER_FILE_SIZE_CLASS).text(this._getFileSize(value.size)).appendTo($fileInfo)\r\n        }\r\n        if (file.isValid()) {\r\n            file.$statusMessage.text(this.option(\"readyToUploadMessage\"))\r\n        } else {\r\n            if (!file.isValidFileExtension) {\r\n                file.$statusMessage.append(this._createValidationElement(\"invalidFileExtensionMessage\"))\r\n            }\r\n            if (!file.isValidMaxSize) {\r\n                file.$statusMessage.append(this._createValidationElement(\"invalidMaxFileSizeMessage\"))\r\n            }\r\n            if (!file.isValidMinSize) {\r\n                file.$statusMessage.append(this._createValidationElement(\"invalidMinFileSizeMessage\"))\r\n            }\r\n            $fileContainer.addClass(FILEUPLOADER_INVALID_CLASS)\r\n        }\r\n    }\r\n    _createValidationElement(key) {\r\n        return $(\"<span>\").text(this.option(key))\r\n    }\r\n    _updateFileNameMaxWidth() {\r\n        var cancelButtonsCount = this.option(\"allowCanceling\") && \"useForm\" !== this.option(\"uploadMode\") ? 1 : 0;\r\n        var uploadButtonsCount = \"useButtons\" === this.option(\"uploadMode\") ? 1 : 0;\r\n        var filesContainerWidth = getWidth(this._$filesContainer.find(\".\" + FILEUPLOADER_FILE_CONTAINER_CLASS).first()) || getWidth(this._$filesContainer);\r\n        var $buttonContainer = this._$filesContainer.find(\".\" + FILEUPLOADER_BUTTON_CONTAINER_CLASS).eq(0);\r\n        var buttonsWidth = getWidth($buttonContainer) * (cancelButtonsCount + uploadButtonsCount);\r\n        var $fileSize = this._$filesContainer.find(\".\" + FILEUPLOADER_FILE_SIZE_CLASS).eq(0);\r\n        var prevFileSize = $fileSize.text();\r\n        $fileSize.text(\"1000 Mb\");\r\n        var fileSizeWidth = getWidth($fileSize);\r\n        $fileSize.text(prevFileSize);\r\n        this._$filesContainer.find(\".\" + FILEUPLOADER_FILE_NAME_CLASS).css(\"maxWidth\", filesContainerWidth - buttonsWidth - fileSizeWidth)\r\n    }\r\n    _renderFileButtons(file, $container) {\r\n        var $cancelButton = this._getCancelButton(file);\r\n        $cancelButton && $container.append($cancelButton);\r\n        var $uploadButton = this._getUploadButton(file);\r\n        $uploadButton && $container.append($uploadButton)\r\n    }\r\n    _getCancelButton(file) {\r\n        if (\"useForm\" === this.option(\"uploadMode\")) {\r\n            return null\r\n        }\r\n        file.cancelButton = this._createComponent($(\"<div>\").addClass(FILEUPLOADER_BUTTON_CLASS + \" \" + FILEUPLOADER_CANCEL_BUTTON_CLASS), Button, {\r\n            onClick: () => this._removeFile(file),\r\n            icon: \"close\",\r\n            visible: this.option(\"allowCanceling\"),\r\n            disabled: this.option(\"readOnly\"),\r\n            integrationOptions: {},\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\")\r\n        });\r\n        return $(\"<div>\").addClass(FILEUPLOADER_BUTTON_CONTAINER_CLASS).append(file.cancelButton.$element())\r\n    }\r\n    _getUploadButton(file) {\r\n        if (!file.isValid() || \"useButtons\" !== this.option(\"uploadMode\")) {\r\n            return null\r\n        }\r\n        file.uploadButton = this._createComponent($(\"<div>\").addClass(FILEUPLOADER_BUTTON_CLASS + \" \" + FILEUPLOADER_UPLOAD_BUTTON_CLASS), Button, {\r\n            onClick: () => this._uploadFile(file),\r\n            icon: \"upload\",\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\")\r\n        });\r\n        file.onLoadStart.add(() => file.uploadButton.option({\r\n            visible: false,\r\n            disabled: true\r\n        }));\r\n        file.onAbort.add(() => file.uploadButton.option({\r\n            visible: true,\r\n            disabled: false\r\n        }));\r\n        return $(\"<div>\").addClass(FILEUPLOADER_BUTTON_CONTAINER_CLASS).append(file.uploadButton.$element())\r\n    }\r\n    _removeFile(file) {\r\n        var _file$$file;\r\n        null === (_file$$file = file.$file) || void 0 === _file$$file ? void 0 : _file$$file.parent().remove();\r\n        this._files.splice(inArray(file, this._files), 1);\r\n        var value = this.option(\"value\").slice();\r\n        value.splice(inArray(file.value, value), 1);\r\n        this._preventRecreatingFiles = true;\r\n        this.option(\"value\", value);\r\n        this._preventRecreatingFiles = false;\r\n        this._toggleFileUploaderEmptyClassName();\r\n        this._resetInputValue(true)\r\n    }\r\n    removeFile(fileData) {\r\n        if (\"useForm\" === this.option(\"uploadMode\") || !isDefined(fileData)) {\r\n            return\r\n        }\r\n        var file = this._getFile(fileData);\r\n        if (file) {\r\n            if (file.uploadStarted) {\r\n                this._preventFilesUploading([file])\r\n            }\r\n            this._removeFile(file)\r\n        }\r\n    }\r\n    _toggleFileUploaderEmptyClassName() {\r\n        this.$element().toggleClass(FILEUPLOADER_EMPTY_CLASS, !this._files.length || this._hasInvalidFile(this._files))\r\n    }\r\n    _hasInvalidFile(files) {\r\n        for (var i = 0; i < files.length; i++) {\r\n            if (!files[i].isValid()) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    _getFileSize(size) {\r\n        var i = 0;\r\n        var labels = [messageLocalization.format(\"dxFileUploader-bytes\"), messageLocalization.format(\"dxFileUploader-kb\"), messageLocalization.format(\"dxFileUploader-Mb\"), messageLocalization.format(\"dxFileUploader-Gb\")];\r\n        var count = labels.length - 1;\r\n        while (i < count && size >= 1024) {\r\n            size /= 1024;\r\n            i++\r\n        }\r\n        return Math.round(size) + \" \" + labels[i]\r\n    }\r\n    _renderSelectButton() {\r\n        var $button = $(\"<div>\").addClass(FILEUPLOADER_BUTTON_CLASS).appendTo(this._$inputWrapper);\r\n        this._selectButton = this._createComponent($button, Button, {\r\n            text: this.option(\"selectButtonText\"),\r\n            focusStateEnabled: false,\r\n            integrationOptions: {},\r\n            disabled: this.option(\"readOnly\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\")\r\n        });\r\n        this._selectFileDialogHandler = this._selectButtonClickHandler.bind(this);\r\n        if (\"desktop\" === devices.real().deviceType) {\r\n            this._selectButton.option(\"onClick\", this._selectFileDialogHandler)\r\n        } else {\r\n            this._attachSelectFileDialogHandler(this._selectButton.$element())\r\n        }\r\n        this._attachSelectFileDialogHandler(this.option(\"dialogTrigger\"))\r\n    }\r\n    _selectButtonClickHandler() {\r\n        if (this.option(\"useNativeInputClick\")) {\r\n            return\r\n        }\r\n        if (this._isInteractionDisabled()) {\r\n            return false\r\n        }\r\n        this._isCustomClickEvent = true;\r\n        eventsEngine.trigger(this._$fileInput, \"click\");\r\n        this._isCustomClickEvent = false\r\n    }\r\n    _attachSelectFileDialogHandler(target) {\r\n        if (!isDefined(target)) {\r\n            return\r\n        }\r\n        this._detachSelectFileDialogHandler(target);\r\n        eventsEngine.on($(target), \"click\", this._selectFileDialogHandler)\r\n    }\r\n    _detachSelectFileDialogHandler(target) {\r\n        if (!isDefined(target)) {\r\n            return\r\n        }\r\n        eventsEngine.off($(target), \"click\", this._selectFileDialogHandler)\r\n    }\r\n    _renderUploadButton() {\r\n        if (\"useButtons\" !== this.option(\"uploadMode\")) {\r\n            return\r\n        }\r\n        var $uploadButton = $(\"<div>\").addClass(FILEUPLOADER_BUTTON_CLASS).addClass(FILEUPLOADER_UPLOAD_BUTTON_CLASS).appendTo(this._$content);\r\n        this._uploadButton = this._createComponent($uploadButton, Button, {\r\n            text: this.option(\"uploadButtonText\"),\r\n            onClick: this._uploadButtonClickHandler.bind(this),\r\n            type: this.option(\"_uploadButtonType\"),\r\n            integrationOptions: {},\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\")\r\n        })\r\n    }\r\n    _uploadButtonClickHandler() {\r\n        this._uploadFiles()\r\n    }\r\n    _shouldDragOverBeRendered() {\r\n        return !this.option(\"readOnly\") && (\"useForm\" !== this.option(\"uploadMode\") || this.option(\"nativeDropSupported\"))\r\n    }\r\n    _isInteractionDisabled() {\r\n        return this.option(\"readOnly\") || this.option(\"disabled\")\r\n    }\r\n    _renderInputContainer() {\r\n        this._$inputContainer = $(\"<div>\").addClass(FILEUPLOADER_INPUT_CONTAINER_CLASS).appendTo(this._$inputWrapper);\r\n        this._$fileInput.addClass(FILEUPLOADER_INPUT_CLASS);\r\n        this._renderInput();\r\n        var labelId = \"dx-fileuploader-input-label-\".concat(new Guid);\r\n        this._$inputLabel.attr(\"id\", labelId).addClass(FILEUPLOADER_INPUT_LABEL_CLASS).appendTo(this._$inputContainer);\r\n        this.setAria(\"labelledby\", labelId, this._$fileInput)\r\n    }\r\n    _renderInput() {\r\n        if (this.option(\"useNativeInputClick\")) {\r\n            this._selectButton.option(\"template\", this._selectButtonInputTemplate.bind(this))\r\n        } else {\r\n            this._$fileInput.appendTo(this._$inputContainer);\r\n            this._selectButton.option(\"template\", \"content\")\r\n        }\r\n        this._applyInputAttributes(this.option(\"inputAttr\"))\r\n    }\r\n    _selectButtonInputTemplate(data, content) {\r\n        var $content = $(content);\r\n        var $text = $(\"<span>\").addClass(\"dx-button-text\").text(data.text);\r\n        $content.append($text).append(this._$fileInput);\r\n        return $content\r\n    }\r\n    _renderInputWrapper() {\r\n        this._$inputWrapper = $(\"<div>\").addClass(FILEUPLOADER_INPUT_WRAPPER_CLASS).appendTo(this._$content)\r\n    }\r\n    _detachDragEventHandlers(target) {\r\n        if (!isDefined(target)) {\r\n            return\r\n        }\r\n        eventsEngine.off($(target), addNamespace(\"\", this.NAME))\r\n    }\r\n    _attachDragEventHandlers(target) {\r\n        var isCustomTarget = target !== this._$inputWrapper;\r\n        if (!isDefined(target) || !this._shouldDragOverBeRendered()) {\r\n            return\r\n        }\r\n        this._detachDragEventHandlers(target);\r\n        target = $(target);\r\n        eventsEngine.on(target, addNamespace(\"dragenter\", this.NAME), this._dragEnterHandler.bind(this, isCustomTarget));\r\n        eventsEngine.on(target, addNamespace(\"dragover\", this.NAME), this._dragOverHandler.bind(this, isCustomTarget));\r\n        eventsEngine.on(target, addNamespace(\"dragleave\", this.NAME), this._dragLeaveHandler.bind(this, isCustomTarget));\r\n        eventsEngine.on(target, addNamespace(\"drop\", this.NAME), this._dropHandler.bind(this, isCustomTarget))\r\n    }\r\n    _applyInputAttributes(customAttributes) {\r\n        this._$fileInput.attr(customAttributes)\r\n    }\r\n    _useInputForDrop() {\r\n        return this.option(\"nativeDropSupported\") && \"useForm\" === this.option(\"uploadMode\")\r\n    }\r\n    _getDropZoneElement(isCustomTarget, e) {\r\n        var targetList = isCustomTarget ? Array.from($(this.option(\"dropZone\"))) : [this._$inputWrapper];\r\n        targetList = targetList.map(element => $(element).get(0));\r\n        return targetList[targetList.indexOf(e.currentTarget)]\r\n    }\r\n    _dragEnterHandler(isCustomTarget, e) {\r\n        if (this.option(\"disabled\")) {\r\n            return false\r\n        }\r\n        if (!this._useInputForDrop()) {\r\n            e.preventDefault()\r\n        }\r\n        var dropZoneElement = this._getDropZoneElement(isCustomTarget, e);\r\n        if (isDefined(dropZoneElement) && null === this._activeDropZone && this.isMouseOverElement(e, dropZoneElement, false)) {\r\n            this._activeDropZone = dropZoneElement;\r\n            this._tryToggleDropZoneActive(true, isCustomTarget, e)\r\n        }\r\n    }\r\n    _dragOverHandler(isCustomTarget, e) {\r\n        if (!this._useInputForDrop()) {\r\n            e.preventDefault()\r\n        }\r\n        e.originalEvent.dataTransfer.dropEffect = \"copy\";\r\n        if (!isCustomTarget) {\r\n            var dropZoneElement = this._getDropZoneElement(false, e);\r\n            if (null === this._activeDropZone && this.isMouseOverElement(e, dropZoneElement, false)) {\r\n                this._dragEnterHandler(false, e)\r\n            }\r\n            if (null !== this._activeDropZone && this._shouldRaiseDragLeave(e, false)) {\r\n                this._dragLeaveHandler(false, e)\r\n            }\r\n        }\r\n    }\r\n    _dragLeaveHandler(isCustomTarget, e) {\r\n        if (!this._useInputForDrop()) {\r\n            e.preventDefault()\r\n        }\r\n        if (null === this._activeDropZone) {\r\n            return\r\n        }\r\n        if (this._shouldRaiseDragLeave(e, isCustomTarget)) {\r\n            this._tryToggleDropZoneActive(false, isCustomTarget, e);\r\n            this._activeDropZone = null\r\n        }\r\n    }\r\n    _shouldRaiseDragLeave(e, isCustomTarget) {\r\n        return !this.isMouseOverElement(e, this._activeDropZone, !isCustomTarget)\r\n    }\r\n    _tryToggleDropZoneActive(active, isCustom, event) {\r\n        var classAction = active ? \"addClass\" : \"removeClass\";\r\n        var mouseAction = active ? \"_dropZoneEnterAction\" : \"_dropZoneLeaveAction\";\r\n        this[mouseAction]({\r\n            event: event,\r\n            dropZoneElement: this._activeDropZone\r\n        });\r\n        if (!isCustom) {\r\n            this.$element()[classAction](FILEUPLOADER_DRAGOVER_CLASS)\r\n        }\r\n    }\r\n    _dropHandler(isCustomTarget, e) {\r\n        this._activeDropZone = null;\r\n        if (!isCustomTarget) {\r\n            this.$element().removeClass(FILEUPLOADER_DRAGOVER_CLASS)\r\n        }\r\n        if (this._useInputForDrop() || isCustomTarget && this._isInteractionDisabled()) {\r\n            return\r\n        }\r\n        e.preventDefault();\r\n        var fileList = e.originalEvent.dataTransfer.files;\r\n        var files = this._getFiles(fileList);\r\n        if (!this.option(\"multiple\") && files.length > 1) {\r\n            return\r\n        }\r\n        this._changeValue(files);\r\n        if (\"instantly\" === this.option(\"uploadMode\")) {\r\n            this._uploadFiles()\r\n        }\r\n    }\r\n    _handleAllFilesUploaded() {\r\n        var areAllFilesLoaded = this._files.every(file => !file.isValid() || file._isError || file._isLoaded || file.isAborted);\r\n        if (areAllFilesLoaded) {\r\n            this._filesUploadedAction()\r\n        }\r\n    }\r\n    _getAllowedFileTypes(acceptSting) {\r\n        if (!acceptSting.length) {\r\n            return []\r\n        }\r\n        return acceptSting.split(\",\").map(item => item.trim())\r\n    }\r\n    _isFileTypeAllowed(file, allowedTypes) {\r\n        for (var i = 0, n = allowedTypes.length; i < n; i++) {\r\n            var allowedType = allowedTypes[i];\r\n            if (\".\" === allowedType[0]) {\r\n                allowedType = allowedType.replace(\".\", \"\\\\.\");\r\n                if (file.name.match(new RegExp(allowedType + \"$\", \"i\"))) {\r\n                    return true\r\n                }\r\n            } else {\r\n                allowedType = allowedType.replace(new RegExp(\"\\\\*\", \"g\"), \"\");\r\n                if (file.type.match(new RegExp(allowedType, \"i\"))) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    _renderWrapper() {\r\n        var $wrapper = $(\"<div>\").addClass(FILEUPLOADER_WRAPPER_CLASS).appendTo(this.$element());\r\n        var $container = $(\"<div>\").addClass(FILEUPLOADER_CONTAINER_CLASS).appendTo($wrapper);\r\n        this._$content = $(\"<div>\").addClass(FILEUPLOADER_CONTENT_CLASS).appendTo($container)\r\n    }\r\n    _clean() {\r\n        this._$fileInput.detach();\r\n        delete this._$filesContainer;\r\n        this._detachSelectFileDialogHandler(this.option(\"dialogTrigger\"));\r\n        this._detachDragEventHandlers(this.option(\"dropZone\"));\r\n        if (this._files) {\r\n            this._files.forEach(file => {\r\n                file.$file = null;\r\n                file.$statusMessage = null\r\n            })\r\n        }\r\n        super._clean()\r\n    }\r\n    abortUpload(fileData) {\r\n        if (\"useForm\" === this.option(\"uploadMode\")) {\r\n            return\r\n        }\r\n        if (isDefined(fileData)) {\r\n            var file = this._getFile(fileData);\r\n            if (file) {\r\n                this._preventFilesUploading([file])\r\n            }\r\n        } else {\r\n            this._preventFilesUploading(this._files)\r\n        }\r\n    }\r\n    upload(fileData) {\r\n        if (\"useForm\" === this.option(\"uploadMode\")) {\r\n            return\r\n        }\r\n        if (isDefined(fileData)) {\r\n            var file = this._getFile(fileData);\r\n            if (file && isFormDataSupported()) {\r\n                this._uploadFile(file)\r\n            }\r\n        } else {\r\n            this._uploadFiles()\r\n        }\r\n    }\r\n    _uploadFiles() {\r\n        if (isFormDataSupported()) {\r\n            each(this._files, (_, file) => this._uploadFile(file))\r\n        }\r\n    }\r\n    _uploadFile(file) {\r\n        this._uploadStrategy.upload(file)\r\n    }\r\n    _updateProgressBar(file, loadedFileData) {\r\n        file.progressBar && file.progressBar.option({\r\n            value: loadedFileData.loaded,\r\n            showStatus: true\r\n        });\r\n        this._progressAction({\r\n            file: file.value,\r\n            segmentSize: loadedFileData.currentSegmentSize,\r\n            bytesLoaded: loadedFileData.loaded,\r\n            bytesTotal: loadedFileData.total,\r\n            event: loadedFileData.event,\r\n            request: file.request\r\n        })\r\n    }\r\n    _updateTotalProgress(totalFilesSize, totalLoadedFilesSize) {\r\n        var progress = totalFilesSize ? this._getProgressValue(totalLoadedFilesSize / totalFilesSize) : 0;\r\n        this.option(\"progress\", progress);\r\n        this._setLoadedSize(totalLoadedFilesSize)\r\n    }\r\n    _getProgressValue(ratio) {\r\n        return Math.floor(100 * ratio)\r\n    }\r\n    _initStatusMessage(file) {\r\n        file.$statusMessage.css(\"display\", \"none\")\r\n    }\r\n    _ensureCancelButtonInitialized(file) {\r\n        if (file.isInitialized) {\r\n            return\r\n        }\r\n        file.cancelButton.option(\"onClick\", () => {\r\n            this._preventFilesUploading([file]);\r\n            this._removeFile(file)\r\n        });\r\n        var hideCancelButton = () => {\r\n            setTimeout(() => {\r\n                file.cancelButton.option({\r\n                    visible: false\r\n                })\r\n            }, FILEUPLOADER_AFTER_LOAD_DELAY)\r\n        };\r\n        file.onLoad.add(hideCancelButton);\r\n        file.onError.add(hideCancelButton)\r\n    }\r\n    _createProgressBar(fileSize) {\r\n        return this._createComponent($(\"<div>\"), ProgressBar, {\r\n            value: void 0,\r\n            min: 0,\r\n            max: fileSize,\r\n            statusFormat: ratio => this._getProgressValue(ratio) + \"%\",\r\n            showStatus: false,\r\n            statusPosition: \"right\"\r\n        })\r\n    }\r\n    _getTotalFilesSize() {\r\n        if (!this._totalFilesSize) {\r\n            this._totalFilesSize = 0;\r\n            each(this._files, (_, file) => {\r\n                this._totalFilesSize += file.value.size\r\n            })\r\n        }\r\n        return this._totalFilesSize\r\n    }\r\n    _getTotalLoadedFilesSize() {\r\n        if (!this._totalLoadedFilesSize) {\r\n            this._totalLoadedFilesSize = 0;\r\n            each(this._files, (_, file) => {\r\n                this._totalLoadedFilesSize += file.loadedSize\r\n            })\r\n        }\r\n        return this._totalLoadedFilesSize\r\n    }\r\n    _setLoadedSize(value) {\r\n        this._totalLoadedFilesSize = value\r\n    }\r\n    _recalculateProgress() {\r\n        this._totalFilesSize = 0;\r\n        this._totalLoadedFilesSize = 0;\r\n        this._updateTotalProgress(this._getTotalFilesSize(), this._getTotalLoadedFilesSize())\r\n    }\r\n    isMouseOverElement(mouseEvent, element, correctPseudoElements) {\r\n        if (!element) {\r\n            return false\r\n        }\r\n        var beforeHeight = correctPseudoElements ? parseFloat(window.getComputedStyle(element, \":before\").height) : 0;\r\n        var afterHeight = correctPseudoElements ? parseFloat(window.getComputedStyle(element, \":after\").height) : 0;\r\n        var x = getOffset(element).left;\r\n        var y = getOffset(element).top + beforeHeight;\r\n        var w = element.offsetWidth;\r\n        var h = element.offsetHeight - beforeHeight - afterHeight;\r\n        var eventX = this._getEventX(mouseEvent);\r\n        var eventY = this._getEventY(mouseEvent);\r\n        return eventX >= x && eventX < x + w && eventY >= y && eventY < y + h\r\n    }\r\n    _getEventX(e) {\r\n        return isTouchEvent(e) ? this._getTouchEventX(e) : e.clientX + this._getDocumentScrollLeft()\r\n    }\r\n    _getEventY(e) {\r\n        return isTouchEvent(e) ? this._getTouchEventY(e) : e.clientY + this._getDocumentScrollTop()\r\n    }\r\n    _getTouchEventX(e) {\r\n        var touchPoint = null;\r\n        if (e.changedTouches.length > 0) {\r\n            touchPoint = e.changedTouches\r\n        } else if (e.targetTouches.length > 0) {\r\n            touchPoint = e.targetTouches\r\n        }\r\n        return touchPoint ? touchPoint[0].pageX : 0\r\n    }\r\n    _getTouchEventY(e) {\r\n        var touchPoint = null;\r\n        if (e.changedTouches.length > 0) {\r\n            touchPoint = e.changedTouches\r\n        } else if (e.targetTouches.length > 0) {\r\n            touchPoint = e.targetTouches\r\n        }\r\n        return touchPoint ? touchPoint[0].pageY : 0\r\n    }\r\n    _getDocumentScrollTop() {\r\n        var document = domAdapter.getDocument();\r\n        return document.documentElement.scrollTop || document.body.scrollTop\r\n    }\r\n    _getDocumentScrollLeft() {\r\n        var document = domAdapter.getDocument();\r\n        return document.documentElement.scrollLeft || document.body.scrollLeft\r\n    }\r\n    _updateReadOnlyState() {\r\n        var readOnly = this.option(\"readOnly\");\r\n        this._selectButton.option(\"disabled\", readOnly);\r\n        this._files.forEach(file => {\r\n            var _file$cancelButton;\r\n            return null === (_file$cancelButton = file.cancelButton) || void 0 === _file$cancelButton ? void 0 : _file$cancelButton.option(\"disabled\", readOnly)\r\n        });\r\n        this._updateInputLabelText();\r\n        this._attachDragEventHandlers(this._$inputWrapper)\r\n    }\r\n    _updateHoverState() {\r\n        var _this$_selectButton, _this$_uploadButton;\r\n        var value = this.option(\"hoverStateEnabled\");\r\n        null === (_this$_selectButton = this._selectButton) || void 0 === _this$_selectButton ? void 0 : _this$_selectButton.option(\"hoverStateEnabled\", value);\r\n        null === (_this$_uploadButton = this._uploadButton) || void 0 === _this$_uploadButton ? void 0 : _this$_uploadButton.option(\"hoverStateEnabled\", value);\r\n        this._files.forEach(file => {\r\n            var _file$uploadButton, _file$cancelButton2;\r\n            null === (_file$uploadButton = file.uploadButton) || void 0 === _file$uploadButton ? void 0 : _file$uploadButton.option(\"hoverStateEnabled\", value);\r\n            null === (_file$cancelButton2 = file.cancelButton) || void 0 === _file$cancelButton2 ? void 0 : _file$cancelButton2.option(\"hoverStateEnabled\", value)\r\n        })\r\n    }\r\n    _optionChanged(args) {\r\n        var {\r\n            name: name,\r\n            value: value,\r\n            previousValue: previousValue\r\n        } = args;\r\n        switch (name) {\r\n            case \"height\":\r\n            case \"width\":\r\n                this._updateFileNameMaxWidth();\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"value\":\r\n                !value.length && this._$fileInput.val(\"\");\r\n                if (!this._preventRecreatingFiles) {\r\n                    this._createFiles();\r\n                    this._renderFiles()\r\n                }\r\n                this._recalculateProgress();\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"name\":\r\n                this._initFileInput();\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"accept\":\r\n                this._initFileInput();\r\n                break;\r\n            case \"multiple\":\r\n                this._initFileInput();\r\n                if (!args.value) {\r\n                    this.reset()\r\n                }\r\n                break;\r\n            case \"readOnly\":\r\n                this._updateReadOnlyState();\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"disabled\":\r\n                this._updateInputLabelText();\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"selectButtonText\":\r\n                this._selectButton.option(\"text\", value);\r\n                break;\r\n            case \"uploadButtonText\":\r\n                this._uploadButton && this._uploadButton.option(\"text\", value);\r\n                break;\r\n            case \"_uploadButtonType\":\r\n                this._uploadButton && this._uploadButton.option(\"type\", value);\r\n                break;\r\n            case \"dialogTrigger\":\r\n                this._detachSelectFileDialogHandler(previousValue);\r\n                this._attachSelectFileDialogHandler(value);\r\n                break;\r\n            case \"dropZone\":\r\n                this._detachDragEventHandlers(previousValue);\r\n                this._attachDragEventHandlers(value);\r\n                break;\r\n            case \"maxFileSize\":\r\n            case \"minFileSize\":\r\n            case \"allowedFileExtensions\":\r\n            case \"invalidFileExtensionMessage\":\r\n            case \"invalidMaxFileSizeMessage\":\r\n            case \"invalidMinFileSizeMessage\":\r\n            case \"readyToUploadMessage\":\r\n            case \"uploadedMessage\":\r\n            case \"uploadFailedMessage\":\r\n            case \"uploadAbortedMessage\":\r\n                this._invalidate();\r\n                break;\r\n            case \"labelText\":\r\n                this._updateInputLabelText();\r\n                break;\r\n            case \"showFileList\":\r\n                if (!this._preventRecreatingFiles) {\r\n                    this._renderFiles()\r\n                }\r\n                break;\r\n            case \"uploadFile\":\r\n            case \"uploadChunk\":\r\n            case \"chunkSize\":\r\n                this._setUploadStrategy();\r\n                break;\r\n            case \"abortUpload\":\r\n            case \"uploadUrl\":\r\n            case \"progress\":\r\n            case \"uploadMethod\":\r\n            case \"uploadHeaders\":\r\n            case \"uploadCustomData\":\r\n            case \"extendSelection\":\r\n                break;\r\n            case \"hoverStateEnabled\":\r\n                this._updateHoverState();\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"allowCanceling\":\r\n            case \"uploadMode\":\r\n                this.reset();\r\n                this._invalidate();\r\n                break;\r\n            case \"onBeforeSend\":\r\n                this._createBeforeSendAction();\r\n                break;\r\n            case \"onUploadStarted\":\r\n                this._createUploadStartedAction();\r\n                break;\r\n            case \"onUploaded\":\r\n                this._createUploadedAction();\r\n                break;\r\n            case \"onFilesUploaded\":\r\n                this._createFilesUploadedAction();\r\n                break;\r\n            case \"onProgress\":\r\n                this._createProgressAction();\r\n                break;\r\n            case \"onUploadError\":\r\n                this._createUploadErrorAction();\r\n                break;\r\n            case \"onUploadAborted\":\r\n                this._createUploadAbortedAction();\r\n                break;\r\n            case \"onDropZoneEnter\":\r\n                this._createDropZoneEnterAction();\r\n                break;\r\n            case \"onDropZoneLeave\":\r\n                this._createDropZoneLeaveAction();\r\n                break;\r\n            case \"useNativeInputClick\":\r\n                this._renderInput();\r\n                break;\r\n            case \"useDragOver\":\r\n                this._attachDragEventHandlers(this._$inputWrapper);\r\n                break;\r\n            case \"nativeDropSupported\":\r\n                this._invalidate();\r\n                break;\r\n            case \"inputAttr\":\r\n                this._applyInputAttributes(this.option(name));\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _resetInputValue(force) {\r\n        if (\"useForm\" === this.option(\"uploadMode\") && !force) {\r\n            return\r\n        }\r\n        this._doPreventInputChange = true;\r\n        this._$fileInput.val(\"\");\r\n        this._doPreventInputChange = false\r\n    }\r\n    reset() {\r\n        this.option(\"value\", [])\r\n    }\r\n}\r\nclass FileBlobReader {\r\n    constructor(file, chunkSize) {\r\n        this.file = file;\r\n        this.chunkSize = chunkSize;\r\n        this.index = 0\r\n    }\r\n    read() {\r\n        if (!this.file) {\r\n            return null\r\n        }\r\n        var result = this.createBlobResult(this.file, this.index, this.chunkSize);\r\n        if (result.isCompleted) {\r\n            this.file = null\r\n        }\r\n        this.index++;\r\n        return result\r\n    }\r\n    createBlobResult(file, index, chunkSize) {\r\n        var currentPosition = index * chunkSize;\r\n        return {\r\n            blob: this.sliceFile(file, currentPosition, chunkSize),\r\n            index: index,\r\n            isCompleted: currentPosition + chunkSize >= file.size\r\n        }\r\n    }\r\n    sliceFile(file, startPos, length) {\r\n        if (file.slice) {\r\n            return file.slice(startPos, startPos + length)\r\n        }\r\n        if (file.webkitSlice) {\r\n            return file.webkitSlice(startPos, startPos + length)\r\n        }\r\n        return null\r\n    }\r\n}\r\nclass FileUploadStrategyBase {\r\n    constructor(fileUploader) {\r\n        this.fileUploader = fileUploader\r\n    }\r\n    upload(file) {\r\n        if (file.isInitialized && file.isAborted) {\r\n            this.fileUploader._resetFileState(file)\r\n        }\r\n        if (file.isValid() && !file.uploadStarted) {\r\n            this._prepareFileBeforeUpload(file);\r\n            this._uploadCore(file)\r\n        }\r\n    }\r\n    abortUpload(file) {\r\n        if (file._isError || file._isLoaded || file.isAborted || !file.uploadStarted) {\r\n            return\r\n        }\r\n        file.isAborted = true;\r\n        file.request && file.request.abort();\r\n        if (this._isCustomCallback(\"abortUpload\")) {\r\n            var abortUpload = this.fileUploader.option(\"abortUpload\");\r\n            var arg = this._createUploadArgument(file);\r\n            var deferred = null;\r\n            try {\r\n                var result = abortUpload(file.value, arg);\r\n                deferred = fromPromise(result)\r\n            } catch (error) {\r\n                deferred = (new Deferred).reject(error).promise()\r\n            }\r\n            deferred.done(() => file.onAbort.fire()).fail(error => this._handleFileError(file, error))\r\n        }\r\n    }\r\n    _beforeSend(xhr, file) {\r\n        var arg = this._createUploadArgument(file);\r\n        this.fileUploader._beforeSendAction({\r\n            request: xhr,\r\n            file: file.value,\r\n            uploadInfo: arg\r\n        });\r\n        file.request = xhr\r\n    }\r\n    _createUploadArgument(file) {}\r\n    _uploadCore(file) {}\r\n    _isCustomCallback(name) {\r\n        var callback = this.fileUploader.option(name);\r\n        return callback && isFunction(callback)\r\n    }\r\n    _handleProgress(file, e) {\r\n        if (file._isError) {\r\n            return\r\n        }\r\n        file._isProgressStarted = true;\r\n        this._handleProgressCore(file, e)\r\n    }\r\n    _handleProgressCore(file, e) {}\r\n    _handleFileError(file, error) {\r\n        file._isError = true;\r\n        file.onError.fire(error)\r\n    }\r\n    _prepareFileBeforeUpload(file) {\r\n        if (file.$file) {\r\n            var _file$progressBar;\r\n            null === (_file$progressBar = file.progressBar) || void 0 === _file$progressBar ? void 0 : _file$progressBar.dispose();\r\n            this.fileUploader._createFileProgressBar(file)\r\n        }\r\n        if (file.isInitialized) {\r\n            return\r\n        }\r\n        file.onLoadStart.add(this._onUploadStarted.bind(this, file));\r\n        file.onLoad.add(this._onLoadedHandler.bind(this, file));\r\n        file.onError.add(this._onErrorHandler.bind(this, file));\r\n        file.onAbort.add(this._onAbortHandler.bind(this, file));\r\n        file.onProgress.add(this._onProgressHandler.bind(this, file));\r\n        file.isInitialized = true\r\n    }\r\n    _shouldHandleError(file, e) {\r\n        return (this._isStatusError(e.status) || !file._isProgressStarted) && !file.isAborted\r\n    }\r\n    _isStatusError(status) {\r\n        return 400 <= status && status < 500 || 500 <= status && status < 600\r\n    }\r\n    _onUploadStarted(file, e) {\r\n        file.uploadStarted = true;\r\n        this.fileUploader._uploadStartedAction({\r\n            file: file.value,\r\n            event: e,\r\n            request: file.request\r\n        })\r\n    }\r\n    _onAbortHandler(file, e) {\r\n        var args = {\r\n            file: file.value,\r\n            event: e,\r\n            request: file.request,\r\n            message: this.fileUploader._getUploadAbortedStatusMessage()\r\n        };\r\n        this.fileUploader._uploadAbortedAction(args);\r\n        this.fileUploader._setStatusMessage(file, args.message);\r\n        this.fileUploader._handleAllFilesUploaded()\r\n    }\r\n    _onErrorHandler(file, error) {\r\n        var args = {\r\n            file: file.value,\r\n            event: void 0,\r\n            request: file.request,\r\n            error: error,\r\n            message: this.fileUploader.option(\"uploadFailedMessage\")\r\n        };\r\n        this.fileUploader._uploadErrorAction(args);\r\n        this.fileUploader._setStatusMessage(file, args.message);\r\n        this.fileUploader._handleAllFilesUploaded()\r\n    }\r\n    _onLoadedHandler(file, e) {\r\n        var args = {\r\n            file: file.value,\r\n            event: e,\r\n            request: file.request,\r\n            message: this.fileUploader.option(\"uploadedMessage\")\r\n        };\r\n        file._isLoaded = true;\r\n        this.fileUploader._uploadedAction(args);\r\n        this.fileUploader._setStatusMessage(file, args.message);\r\n        this.fileUploader._handleAllFilesUploaded()\r\n    }\r\n    _onProgressHandler(file, e) {\r\n        if (file) {\r\n            var totalFilesSize = this.fileUploader._getTotalFilesSize();\r\n            var totalLoadedFilesSize = this.fileUploader._getTotalLoadedFilesSize();\r\n            var loadedSize = Math.min(e.loaded, file.value.size);\r\n            var segmentSize = loadedSize - file.loadedSize;\r\n            file.loadedSize = loadedSize;\r\n            this.fileUploader._updateTotalProgress(totalFilesSize, totalLoadedFilesSize + segmentSize);\r\n            this.fileUploader._updateProgressBar(file, this._getLoadedData(loadedSize, e.total, segmentSize, e))\r\n        }\r\n    }\r\n    _getLoadedData(loaded, total, currentSegmentSize, event) {\r\n        return {\r\n            loaded: loaded,\r\n            total: total,\r\n            currentSegmentSize: currentSegmentSize\r\n        }\r\n    }\r\n    _extendFormData(formData) {\r\n        var formDataEntries = this.fileUploader.option(\"uploadCustomData\");\r\n        for (var entryName in formDataEntries) {\r\n            if (Object.prototype.hasOwnProperty.call(formDataEntries, entryName) && isDefined(formDataEntries[entryName])) {\r\n                formData.append(entryName, formDataEntries[entryName])\r\n            }\r\n        }\r\n    }\r\n}\r\nclass ChunksFileUploadStrategyBase extends FileUploadStrategyBase {\r\n    constructor(fileUploader) {\r\n        super(fileUploader);\r\n        this.chunkSize = this.fileUploader.option(\"chunkSize\")\r\n    }\r\n    _uploadCore(file) {\r\n        var realFile = file.value;\r\n        var chunksData = {\r\n            name: realFile.name,\r\n            loadedBytes: 0,\r\n            type: realFile.type,\r\n            blobReader: new FileBlobReader(realFile, this.chunkSize),\r\n            guid: new Guid,\r\n            fileSize: realFile.size,\r\n            count: Math.ceil(realFile.size / this.chunkSize),\r\n            customData: {}\r\n        };\r\n        file.chunksData = chunksData;\r\n        this._sendChunk(file, chunksData)\r\n    }\r\n    _sendChunk(file, chunksData) {\r\n        var chunk = chunksData.blobReader.read();\r\n        chunksData.currentChunk = chunk;\r\n        if (chunk) {\r\n            this._sendChunkCore(file, chunksData, chunk).done(() => {\r\n                if (file.isAborted) {\r\n                    return\r\n                }\r\n                chunksData.loadedBytes += chunk.blob.size;\r\n                file.onProgress.fire({\r\n                    loaded: chunksData.loadedBytes,\r\n                    total: file.value.size\r\n                });\r\n                if (chunk.isCompleted) {\r\n                    file.onLoad.fire()\r\n                }\r\n                setTimeout(() => this._sendChunk(file, chunksData))\r\n            }).fail(error => {\r\n                if (this._shouldHandleError(file, error)) {\r\n                    this._handleFileError(file, error)\r\n                }\r\n            })\r\n        }\r\n    }\r\n    _sendChunkCore(file, chunksData, chunk) {}\r\n    _tryRaiseStartLoad(file) {\r\n        if (!file.isStartLoad) {\r\n            file.isStartLoad = true;\r\n            file.onLoadStart.fire()\r\n        }\r\n    }\r\n    _getEvent(e) {\r\n        return null\r\n    }\r\n    _createUploadArgument(file) {\r\n        return this._createChunksInfo(file.chunksData)\r\n    }\r\n    _createChunksInfo(chunksData) {\r\n        return {\r\n            bytesUploaded: chunksData.loadedBytes,\r\n            chunkCount: chunksData.count,\r\n            customData: chunksData.customData,\r\n            chunkBlob: chunksData.currentChunk.blob,\r\n            chunkIndex: chunksData.currentChunk.index\r\n        }\r\n    }\r\n}\r\nclass DefaultChunksFileUploadStrategy extends ChunksFileUploadStrategyBase {\r\n    _sendChunkCore(file, chunksData, chunk) {\r\n        return ajax.sendRequest({\r\n            url: this.fileUploader.option(\"uploadUrl\"),\r\n            method: this.fileUploader.option(\"uploadMethod\"),\r\n            headers: this.fileUploader.option(\"uploadHeaders\"),\r\n            beforeSend: xhr => this._beforeSend(xhr, file),\r\n            upload: {\r\n                onprogress: e => this._handleProgress(file, e),\r\n                onloadstart: () => this._tryRaiseStartLoad(file),\r\n                onabort: () => file.onAbort.fire()\r\n            },\r\n            data: this._createFormData({\r\n                fileName: chunksData.name,\r\n                blobName: this.fileUploader.option(\"name\"),\r\n                blob: chunk.blob,\r\n                index: chunk.index,\r\n                count: chunksData.count,\r\n                type: chunksData.type,\r\n                guid: chunksData.guid,\r\n                size: chunksData.fileSize\r\n            })\r\n        })\r\n    }\r\n    _createFormData(options) {\r\n        var formData = new window.FormData;\r\n        formData.append(options.blobName, options.blob);\r\n        formData.append(FILEUPLOADER_CHUNK_META_DATA_NAME, JSON.stringify({\r\n            FileName: options.fileName,\r\n            Index: options.index,\r\n            TotalCount: options.count,\r\n            FileSize: options.size,\r\n            FileType: options.type,\r\n            FileGuid: options.guid\r\n        }));\r\n        this._extendFormData(formData);\r\n        return formData\r\n    }\r\n}\r\nclass CustomChunksFileUploadStrategy extends ChunksFileUploadStrategyBase {\r\n    _sendChunkCore(file, chunksData) {\r\n        this._tryRaiseStartLoad(file);\r\n        var chunksInfo = this._createChunksInfo(chunksData);\r\n        var uploadChunk = this.fileUploader.option(\"uploadChunk\");\r\n        try {\r\n            var result = uploadChunk(file.value, chunksInfo);\r\n            return fromPromise(result)\r\n        } catch (error) {\r\n            return (new Deferred).reject(error).promise()\r\n        }\r\n    }\r\n    _shouldHandleError(file, error) {\r\n        return true\r\n    }\r\n}\r\nclass WholeFileUploadStrategyBase extends FileUploadStrategyBase {\r\n    _uploadCore(file) {\r\n        file.loadedSize = 0;\r\n        this._uploadFile(file).done(() => {\r\n            if (!file.isAborted) {\r\n                file.onLoad.fire()\r\n            }\r\n        }).fail(error => {\r\n            if (this._shouldHandleError(file, error)) {\r\n                this._handleFileError(file, error)\r\n            }\r\n        })\r\n    }\r\n    _uploadFile(file) {}\r\n    _handleProgressCore(file, e) {\r\n        file.onProgress.fire(e)\r\n    }\r\n    _getLoadedData(loaded, total, segmentSize, event) {\r\n        var result = super._getLoadedData(loaded, total, segmentSize, event);\r\n        result.event = event;\r\n        return result\r\n    }\r\n}\r\nclass DefaultWholeFileUploadStrategy extends WholeFileUploadStrategyBase {\r\n    _uploadFile(file) {\r\n        return ajax.sendRequest({\r\n            url: this.fileUploader.option(\"uploadUrl\"),\r\n            method: this.fileUploader.option(\"uploadMethod\"),\r\n            headers: this.fileUploader.option(\"uploadHeaders\"),\r\n            beforeSend: xhr => this._beforeSend(xhr, file),\r\n            upload: {\r\n                onprogress: e => this._handleProgress(file, e),\r\n                onloadstart: () => file.onLoadStart.fire(),\r\n                onabort: () => file.onAbort.fire()\r\n            },\r\n            data: this._createFormData(this.fileUploader.option(\"name\"), file.value)\r\n        })\r\n    }\r\n    _createFormData(fieldName, fieldValue) {\r\n        var formData = new window.FormData;\r\n        formData.append(fieldName, fieldValue, fieldValue.name);\r\n        this._extendFormData(formData);\r\n        return formData\r\n    }\r\n}\r\nclass CustomWholeFileUploadStrategy extends WholeFileUploadStrategyBase {\r\n    _uploadFile(file) {\r\n        file.onLoadStart.fire();\r\n        var uploadFile = this.fileUploader.option(\"uploadFile\");\r\n        try {\r\n            var result = uploadFile(file.value, loadedBytes => {\r\n                var arg = {\r\n                    loaded: loadedBytes,\r\n                    total: file.size\r\n                };\r\n                this._handleProgress(file, arg)\r\n            });\r\n            return fromPromise(result)\r\n        } catch (error) {\r\n            return (new Deferred).reject(error).promise()\r\n        }\r\n    }\r\n    _shouldHandleError(file, e) {\r\n        return true\r\n    }\r\n}\r\nregisterComponent(\"dxFileUploader\", FileUploader);\r\nexport default FileUploader;\r\n"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","DxFileUploader","file_uploader_1","require","index_1","createComponent","props","abortUpload","Function","accept","String","accessKey","activeStateEnabled","Boolean","allowCanceling","allowedFileExtensions","Array","chunkSize","Number","dialogTrigger","disabled","dropZone","elementAttr","focusStateEnabled","height","hint","hoverStateEnabled","inputAttr","invalidFileExtensionMessage","invalidMaxFileSizeMessage","invalidMinFileSizeMessage","isValid","labelText","maxFileSize","minFileSize","multiple","name","onBeforeSend","onContentReady","onDisposing","onDropZoneEnter","onDropZoneLeave","onFilesUploaded","onInitialized","onOptionChanged","onProgress","onUploadAborted","onUploaded","onUploadError","onUploadStarted","onValueChanged","progress","readOnly","readyToUploadMessage","rtlEnabled","selectButtonText","showFileList","tabIndex","uploadAbortedMessage","uploadButtonText","uploadChunk","uploadCustomData","uploadedMessage","uploadFailedMessage","uploadFile","uploadHeaders","uploadMethod","uploadMode","uploadUrl","validationError","validationErrors","validationStatus","visible","width","emits","computed","instance","$_instance","beforeCreate","$_WidgetClass","$_hasAsyncTemplate","TRACKBAR_CLASS","TRACKBAR_CONTAINER_CLASS","TRACKBAR_RANGE_CLASS","TRACKBAR_WRAPPER_CLASS","TrackBar","Editor","_getDefaultOptions","extend","callBase","min","max","_initMarkup","$element","addClass","_renderWrapper","_renderContainer","_renderRange","_renderValue","_setRangeStyles","_render","_rangeStylesConfig","_$wrapper","$","appendTo","_$bar","_$range","val","option","_currentRatio","ratio","_needPreventAnimation","setAria","valuemin","valuemax","valuenow","options","fx","hasWindow","type","duration","to","css","_optionChanged","args","_dispose","registerComponent","PROGRESSBAR_CLASS","PROGRESSBAR_CONTAINER_CLASS","PROGRESSBAR_RANGE_CONTAINER_CLASS","PROGRESSBAR_RANGE_CLASS","PROGRESSBAR_WRAPPER_CLASS","PROGRESSBAR_STATUS_CLASS","PROGRESSBAR_INDETERMINATE_SEGMENT_CONTAINER","PROGRESSBAR_INDETERMINATE_SEGMENT","ProgressBar","statusFormat","Math","round","showStatus","onComplete","statusPosition","_animatingSegmentCount","_defaultOptionsRules","concat","device","_device","platform","_renderStatus","_createCompleteAction","append","_toggleStatus","_useTemplates","_completeAction","_createActionByOption","_$status","_renderIndeterminateState","_$segmentContainer","segments","i","splitPosition","split","prependTo","detach","_togglePositionClass","position","removeClass","positionClass","_toggleIndeterminateState","toggle","remove","_setStatus","format","isFunction","bind","statusText","text","window","getWindow","FILEUPLOADER_CLASS","FILEUPLOADER_EMPTY_CLASS","FILEUPLOADER_SHOW_FILE_LIST_CLASS","FILEUPLOADER_DRAGOVER_CLASS","FILEUPLOADER_WRAPPER_CLASS","FILEUPLOADER_CONTAINER_CLASS","FILEUPLOADER_CONTENT_CLASS","FILEUPLOADER_INPUT_WRAPPER_CLASS","FILEUPLOADER_INPUT_CONTAINER_CLASS","FILEUPLOADER_INPUT_LABEL_CLASS","FILEUPLOADER_INPUT_CLASS","FILEUPLOADER_FILES_CONTAINER_CLASS","FILEUPLOADER_FILE_CONTAINER_CLASS","FILEUPLOADER_FILE_INFO_CLASS","FILEUPLOADER_FILE_STATUS_MESSAGE_CLASS","FILEUPLOADER_FILE_CLASS","FILEUPLOADER_FILE_NAME_CLASS","FILEUPLOADER_FILE_SIZE_CLASS","FILEUPLOADER_BUTTON_CLASS","FILEUPLOADER_BUTTON_CONTAINER_CLASS","FILEUPLOADER_CANCEL_BUTTON_CLASS","FILEUPLOADER_UPLOAD_BUTTON_CLASS","FILEUPLOADER_INVALID_CLASS","FILEUPLOADER_AFTER_LOAD_DELAY","FILEUPLOADER_CHUNK_META_DATA_NAME","renderFileUploaderInput","attr","isFormDataSupported","FormData","FileUploader","click","e","preventDefault","$selectButton","_selectButton","eventsEngine","clickEventName","space","enter","_optionsByReference","messageLocalization","extendSelection","validationMessageMode","validationMessageOffset","h","v","useNativeInputClick","useDragOver","nativeDropSupported","_uploadButtonType","devices","deviceType","isMaterial","isLabelTextDefined","_shouldDragOverBeRendered","_initFileInput","_initLabel","_setUploadStrategy","_createFiles","_createBeforeSendAction","_createUploadStartedAction","_createUploadedAction","_createFilesUploadedAction","_createProgressAction","_createUploadErrorAction","_createUploadAbortedAction","_createDropZoneEnterAction","_createDropZoneLeaveAction","strategy","CustomChunksFileUploadStrategy","DefaultChunksFileUploadStrategy","CustomWholeFileUploadStrategy","DefaultWholeFileUploadStrategy","_uploadStrategy","_isCustomClickEvent","_$fileInput","_inputChangeHandler","stopPropagation","_resetInputValue","prop","_doPreventInputChange","fileName","replace","files","length","_getFiles","_changeValue","_uploadFiles","_shouldFileListBeExtended","slice","fileList","values","each","_","push","fileData","targetFileValue","isNumeric","_files","filter","file","_$inputLabel","_updateInputLabelText","correctedValue","_isInteractionDisabled","find","_renderInputWrapper","_renderSelectButton","_renderInputContainer","_renderUploadButton","_preventRecreatingFiles","_activeDropZone","_attachDragEventHandlers","_$inputWrapper","_renderFiles","progressBar","_createProgressBar","size","$file","_initStatusMessage","_ensureCancelButtonInitialized","message","setTimeout","$statusMessage","_preventFilesUploading","_createFile","_validateFile","forEach","isValidFileExtension","_validateFileExtension","isValidMinSize","_validateMinFileSize","isValidMaxSize","_validateMaxFileSize","allowedExtensions","allowedTypes","_getAllowedFileTypes","fileExtension","substring","lastIndexOf","toLowerCase","_isFileTypeAllowed","fileSize","_beforeSendAction","excludeValidators","_uploadStartedAction","_uploadedAction","_filesUploadedAction","_progressAction","_uploadAbortedAction","_uploadErrorAction","_dropZoneEnterAction","_dropZoneLeaveAction","loadedSize","Callbacks","onAbort","onLoad","onError","onLoadStart","isInitialized","isAborted","uploadStarted","isStartLoad","chunksData","request","_this$_validationMess","_$filesContainer","empty","_$content","_renderFile","toggleClass","_toggleFileUploaderEmptyClassName","_updateFileNameMaxWidth","_validationMessage","repaint","$fileContainer","_renderFileButtons","$fileInfo","isDefined","_getFileSize","_createValidationElement","key","cancelButtonsCount","uploadButtonsCount","filesContainerWidth","getWidth","first","$buttonContainer","eq","buttonsWidth","$fileSize","prevFileSize","fileSizeWidth","$container","$cancelButton","_getCancelButton","$uploadButton","_getUploadButton","cancelButton","_createComponent","Button","onClick","_removeFile","icon","integrationOptions","uploadButton","_uploadFile","add","_file$$file","parent","splice","inArray","_getFile","_hasInvalidFile","labels","count","$button","_selectFileDialogHandler","_selectButtonClickHandler","_attachSelectFileDialogHandler","target","_detachSelectFileDialogHandler","_uploadButton","_uploadButtonClickHandler","_$inputContainer","_renderInput","labelId","Guid","_selectButtonInputTemplate","_applyInputAttributes","data","content","$content","$text","addNamespace","NAME","isCustomTarget","_detachDragEventHandlers","_dragEnterHandler","_dragOverHandler","_dragLeaveHandler","_dropHandler","customAttributes","targetList","from","map","element","get","indexOf","currentTarget","_useInputForDrop","dropZoneElement","_getDropZoneElement","isMouseOverElement","_tryToggleDropZoneActive","originalEvent","dataTransfer","dropEffect","_shouldRaiseDragLeave","active","isCustom","event","classAction","mouseAction","areAllFilesLoaded","every","_isError","_isLoaded","acceptSting","item","trim","n","allowedType","match","RegExp","$wrapper","upload","loadedFileData","loaded","segmentSize","currentSegmentSize","bytesLoaded","bytesTotal","total","totalFilesSize","totalLoadedFilesSize","_getProgressValue","_setLoadedSize","floor","hideCancelButton","_totalFilesSize","_totalLoadedFilesSize","_updateTotalProgress","_getTotalFilesSize","_getTotalLoadedFilesSize","mouseEvent","correctPseudoElements","beforeHeight","parseFloat","getComputedStyle","afterHeight","x","getOffset","left","y","top","w","offsetWidth","offsetHeight","eventX","_getEventX","eventY","_getEventY","isTouchEvent","_getTouchEventX","clientX","_getDocumentScrollLeft","_getTouchEventY","clientY","_getDocumentScrollTop","touchPoint","changedTouches","targetTouches","pageX","pageY","document","domAdapter","documentElement","scrollTop","body","scrollLeft","_file$cancelButton","_this$_selectButton","_this$_uploadButton","_file$uploadButton","_file$cancelButton2","previousValue","_recalculateProgress","reset","_updateReadOnlyState","_invalidate","_updateHoverState","force","FileBlobReader","index","result","createBlobResult","isCompleted","currentPosition","blob","sliceFile","startPos","webkitSlice","FileUploadStrategyBase","fileUploader","_resetFileState","_prepareFileBeforeUpload","_uploadCore","abort","_isCustomCallback","arg","_createUploadArgument","deferred","fromPromise","error","Deferred","reject","promise","done","fire","fail","_handleFileError","xhr","uploadInfo","callback","_isProgressStarted","_handleProgressCore","_file$progressBar","dispose","_createFileProgressBar","_onUploadStarted","_onLoadedHandler","_onErrorHandler","_onAbortHandler","_onProgressHandler","_isStatusError","status","_getUploadAbortedStatusMessage","_setStatusMessage","_handleAllFilesUploaded","_updateProgressBar","_getLoadedData","formData","formDataEntries","entryName","prototype","hasOwnProperty","call","ChunksFileUploadStrategyBase","realFile","loadedBytes","blobReader","guid","ceil","customData","_sendChunk","chunk","read","currentChunk","_sendChunkCore","_shouldHandleError","_createChunksInfo","bytesUploaded","chunkCount","chunkBlob","chunkIndex","ajax","url","method","headers","beforeSend","_beforeSend","onprogress","_handleProgress","onloadstart","_tryRaiseStartLoad","onabort","_createFormData","blobName","JSON","stringify","FileName","Index","TotalCount","FileSize","FileType","FileGuid","_extendFormData","chunksInfo","WholeFileUploadStrategyBase","fieldName","fieldValue"],"sourceRoot":""}